# -*- coding: UTF-8 -*-
# ------------------------------------------------------------------------------
#     Copyright (c) 2023+ TYPETR
#     Usage by MIT License
# ..............................................................................
#
#   groupBaseGlyphs.py
#

# Glyphs that are used as base for groups. Scripts only kern within the script (and "all") to the other side.
# The "all" also kern to each other, on the other side. There is no kerning allowed between the scripts.

FORCE_GROUP1 = {}
FORCE_GROUP2 = {}

PUBLIC_KERN1 = 'public.kern1.'
PUBLIC_KERN2 = 'public.kern2.'

SC = 'sc'
UC1 = 'uc1'
UC2 = 'uc2'

LT1 = 'lt1'
LT2 = 'lt2'
LT1_SC = LT1+SC
LT2_SC = LT2+SC

CY1 = 'cy1'
CY2 = 'cy2'
CY1_SC = CY1+SC
CY2_SC = CY2+SC

GR1 = 'gr1'
GR2 = 'gr2'
GR1_SC = GR1+SC
GR2_SC = GR2+SC

ASC1 = 'asc1'
ASC2 = 'asc2'

FIG1 = 'fig1'
FIG2 = 'fig2'
FIG1_SC = FIG1+SC
FIG2_SC = FIG2+SC

SUPS1 = 'sups1'
SUPS2 = 'sups2'
SINF1 = 'sinf1'
SINF2 = 'sinf2'
DNOM1 = 'dnom1'
DNOM2 = 'dnom2'
NUMR1 = 'numr1'
NUMR2 = 'numr2'
DNOM1 = 'dnom1'
DNOM2 = 'dnom2'
ONUM1 = 'onum1'
ONUM2 = 'onum2'

GROUP_NAME_PARTS = {
    LT1:    (PUBLIC_KERN1, '_lt'), 
    LT2:    (PUBLIC_KERN2, '_lt'),
    LT1_SC: (PUBLIC_KERN1, '_sc_lt'),
    LT2_SC: (PUBLIC_KERN2, '_sc_lt'),

    CY1: (PUBLIC_KERN1, '_cy'), 
    CY2: (PUBLIC_KERN2, '_cy'),
    CY1_SC: (PUBLIC_KERN1, '_sc_cy'),
    CY2_SC: (PUBLIC_KERN2, '_sc_cy'),

    GR1: (PUBLIC_KERN1, '_gr'), 
    GR2: (PUBLIC_KERN2, '_gr'),
    GR1_SC: (PUBLIC_KERN1, '_sc_gr'),
    GR2_SC: (PUBLIC_KERN2, '_sc_gr'),

    ASC1: (PUBLIC_KERN1, '_asc'), 
    ASC2: (PUBLIC_KERN2, '_asc'),

    FIG1: (PUBLIC_KERN1, '_fig'), 
    FIG2: (PUBLIC_KERN2, '_fig'),

    UC1: (PUBLIC_KERN1, '_uc'), 
    UC2: (PUBLIC_KERN2, '_uc'),

    SUPS1: (PUBLIC_KERN1, '_superior'), 
    SUPS2: (PUBLIC_KERN2, '_superior'),
    SINF1: (PUBLIC_KERN1, '_inferior'), 
    SINF2: (PUBLIC_KERN2, '_inferior'),
    NUMR1: (PUBLIC_KERN1, '_numr'), 
    NUMR2: (PUBLIC_KERN2, '_numr'),
    DNOM1: (PUBLIC_KERN1, '_dnom'), 
    DNOM2: (PUBLIC_KERN2, '_dnom'),
    ONUM1: (PUBLIC_KERN1, '_onum'), 
    ONUM2: (PUBLIC_KERN2, '_onum'),
}
BASE_SCRIPTS1 = (
    LT1, LT1_SC, 
    CY1, CY1_SC, 
    GR1, GR1_SC, 
    ASC1, 
    FIG1, FIG1_SC, 
    SUPS1, SINF1, NUMR1, DNOM1, ONUM1)
BASE_SCRIPTS2 = (
    LT2, LT2_SC, 
    CY2, CY2_SC, 
    GR2, GR2_SC, 
    ASC2, 
    FIG2, 
    SUPS2, SINF2, NUMR2, DNOM2, ONUM2)

# For now, this is an italic table.
# Defining all script <--> script combinations in the kerning table.
# Also this table is used to generate at least one placeholder kerning pair,
# to ensure that the [kern] lookup gets generated. Otherwise building the VF
# complains for incompatible amounts of [kern] lookups.
# In general this gets solved automatically if all kerning exists, but during 
# development not all kerning may have been filled in.

KERN_GROUPS = (
    # Latin
    (LT1, LT2),
    (LT1_SC, LT2_SC),
    (LT1, LT1_SC),
    (LT1, UC2),
    (UC1, LT2),

    (ASC1, ASC2),
    (ASC1, LT2),
    (ASC1, LT2_SC),
    (LT1, ASC2),
    (LT1_SC, ASC2),

    (FIG1, FIG2),
    (FIG1, LT2),
    (LT1, FIG2),
    
    (SUPS1, SUPS2),
    (SINF1, SINF2),
    (LT1, SUPS2),
    (LT1, SINF2),
    (SUPS1, LT2),
    (SINF1, LT2),
    
    (NUMR1, NUMR2),
    (LT1, NUMR2),
    (LT1, DNOM2),
    (NUMR1, LT2),
    (DNOM1, LT2),
    
    (ONUM1, ONUM2),
    (ONUM1, LT2),
    (LT1, ONUM2),

    # Cyrillic
    (CY1, CY2),
    (CY1_SC, CY2_SC),
    (CY1, CY1_SC),

    #(ASC1, ASC2),
    (ASC1, CY2),
    (ASC1, CY2_SC),
    (CY1, ASC2),
    (CY1_SC, ASC2),

    #(FIG1, FIG2),
    (FIG1, CY2),
    (CY1, FIG2),
    
    #(SUPS1, SUPS2),
    #(SINF1, SINF2),
    (CY1, SUPS2),
    (CY1, SINF2),
    (SUPS1, CY2),
    (SINF1, CY2),
    
    #(NUMR1, NUMR2),
    (CY1, NUMR2),
    (CY1, DNOM2),
    (NUMR1, CY2),
    (DNOM1, CY2),
    
    #(ONUM1, ONUM2),
    (ONUM1, CY2),
    (CY1, ONUM2),

    # Greek
    (GR1, GR2),
    (GR1_SC, GR2_SC),
    (GR1, GR1_SC),

    #(ASC1, ASC2),
    (ASC1, GR2),
    (ASC1, GR2_SC),
    (GR1, ASC2),
    (GR1_SC, ASC2),

    #(FIG1, FIG2),
    (FIG1, GR2),
    (GR1, FIG2),
    
    #(SUPS1, SUPS2),
    #(SINF1, SINF2),
    (GR1, SUPS2),
    (GR1, SINF2),
    (SUPS1, GR2),
    (SINF1, GR2),
    
    #(NUMR1, NUMR2),
    (GR1, NUMR2),
    (GR1, DNOM2),
    (NUMR1, GR2),
    (DNOM1, GR2),
    
    #(ONUM1, ONUM2),
    (ONUM1, GR2),
    (GR1, ONUM2),

)

GROUP_IGNORE = ('tnum', 'cmb', 'comb', 'mod', 'superior', 'inferior', 'component',) # Always ignore glyphs that include these patterns

# This table is generated by the autoGroups.py script for now.
GROUP_BASE_GLYPHS = {
#Groups: 981 Kerning: 412, Proforma_Pro-Regular_MA76.ufo
#{'superior': {'eurosuperior', 'ssuperior', 'isuperior', 'egravesuperior', 'eightsuperior', 'ninesuperior', 'tsuperior', 'quotedblleftsuperior', 'centsuperior', 'rsuperior', 'twosuperior', 'xsuperior', 'foursuperior', 'gsuperior', 'dollarsuperior', 'bsuperior', 'usuperior', 'jsuperior', 'fsuperior', 'colonsuperior', 'parenrightsuperior', 'qsuperior', 'msuperior', 'csuperior', 'asuperior', 'ksuperior', 'zerosuperior', 'ysuperior', 'parenleftsuperior', 'sixsuperior', 'fivesuperior', 'vsuperior', 'zsuperior', 'sevensuperior', 'onesuperior', 'threesuperior', 'hsuperior', 'sterlingsuperior', 'equalsuperior', 'wsuperior'}, 'cy': {'Enghe_cy', 'Te_cy', 'E_cy', 'Ef_cy', 'Gehookstroke_cy', 'enhook_cy', 'Enghe_cy.sc', 'Enhook_cy.sc', 'Zhe_cy.sc', 'Dze_cy', 'de_cy', 'dje_cy', 'Dje_cy', 'de_cy.loclBGR', 'a_cy', 'Ve_cy', 'Edieresis_cy', 'ge_cy.loclBGR', 'enghe_cy', 'ghemiddlehook_cy', 'chedescender_cy', 'Dzeabkh_cy', 'be_cy.loclSRB', 'che_cy.loclBGR', 'Kahook_cy', 'Be_cy.sc', 'palochka_cy', 'ustrait_cy', 'Kahook_cy.sc', 'Te_cy.sc', 'ii_cy.loclBGR', 'Cheabkhasian_cy', 'hardsign_cy.loclBGR', 'ka_cy', 'e_cy', 'Pemiddlehook_cy', 've_cy.loclBGR', 'edieresis_cy', 'zhe_cy', 'Enhook_cy', 'Shha_cy.sc', 'Zhe_cy', 'haabkhasian_cy', 'Ia_cy', 'Ka_cy', 'Ha_cy.sc', 'Ve_cy.sc', 'cheabkhasian_cy', 'Chedescender_cy', 'El_cy.sc', 'Aie_cy', 'kahook_cy', 'Hahook_cy.sc', 'Ia_cy.sc', 'Er_cy.sc', 'er_cy', 'De_cy.sc', 'Hardsign_cy', 'dzeabkh_cy', 'softsign_cy.loclBGR', 'en_cy.loclBGR', 'shha_cy', 'ha_cy', 'Schwa_cy.sc', 'Cheabkhasian_cy.sc', 'A_cy', 'Che_cy', 'Gehookstroke_cy.sc', 'Che_cy.sc', 'A_cy.sc', 'De_cy.loclBGR', 'Yi_cy.sc', 'Ef_cy.sc', 'el_cy', 'Ustrait_cy', 'Chedescender_cy.sc', 'Hahook_cy', 'gehookstroke_cy', 'schwa_cy', 'Edieresis_cy.sc', 'Dze_cy.sc', 'U_cy.sc', 'be_cy', 'U_cy', 'u_cy', 'Haabkhasian_cy', 'De_cy.loclBGR.sc', 'Dzeabkh_cy.sc', 'iigrave_cy.loclBGR', 'Aie_cy.sc', 'Ka_cy.sc', 'Er_cy', 'Dje_cy.sc', 'De_cy', 'dze_cy', 'hahook_cy', 'che_cy', 'el_cy.loclBGR', 'Hardsign_cy.sc', 'Ha_cy', 'dzhe_cy', 'Pemiddlehook_cy.sc', 'Haabkhasian_cy.sc', 've_cy', 'Shha_cy', 'El_cy', 'pe_cy.loclBGR', 'aie_cy', 'Schwa_cy', 'Be_cy', 'hardsign_cy', 'ia_cy', 'ze_cy', 'E_cy.sc', 'Ustrait_cy.sc', 'yi_cy'}, 'lt': {'Nsuperior', 'd', 'Gsuperior', 'S', 'Psuperior', 'Oopen', 'z', 'tsuperior', 'chi_latin', 'L', 'h', 'C.sc', 'Lcaron.sc', 'vinferior', 'zinferior', 'Chook', 'Dsuperior', 'Dz', 'Sinferior', 'U', 'Yogh', 'Z.sc', 'L.sc', 'AE.sc', 'Usuperior', 'Hsuperior', 'ginferior', 'bsuperior', 'gamma_latin', 'fsuperior', 'V.sc', 'finferior', 'aturned', 'ustroke', 'Esuperior', 'c', 'Oopen.sc', 'Cinferior', 'Aturned', 'hhook', 'Fstroke', 't', 'Ysuperior', 'lbar', 'Ohorn.sc', 'B', 'i', 'R.sc', 'chook', 'zsuperior', 'U.sc', 'g', 'Thorn.sc', 'W', 'Lsuperior', 'Uhorn.sc', 'hsuperior', 'J.base.sc', 'Bhook', 'j', 'dsuperior', 'Z', 'dinferior', 'Dinferior', 'henghook', 'Gscript', 'Schwa', 'Bsuperior', 'isuperior', 'P', 'G.sc', 'A.sc', 'egravesuperior', 'ghook', 'Qhooktail', 'Bhook.sc', 'Tsuperior', 'Ainferior', 'Linferior', 'Hturned', 'qinferior', 'jcaron', 'xsuperior', 'y', 'Ezh.sc', 'gsuperior', 'Ldot.sc', 'usuperior', 'jdotless', 'eng', 'Finferior', 'Creversed', 'Germandbls', 'beta_latin', 'minferior', 'Eng', 'J.base', 'qsuperior', 'Germandbls.sc', 'Lcaron', 'csuperior', 'f', 'Lj', 'asuperior', 'F', 'B.sc', 'Ezhreversed', 'Xinferior', 'vsuperior', 'tcaron', 'dhook', 'Chi_latin.sc', 'Csuperior', 'Fstroke.sc', 'Whook', 'yinferior', 'Chi_latin', 'Alpha_latin', 'wsuperior', 'rinferior', 'whook', 'dtail', 'Xsuperior', 'R', 'N', 'Y.sc', 'A', 'Asuperior', 'Rsuperior', 'Ohorn', 'eopen', 'F.sc', 'Ereversed.sc', 'Tinferior', 'Eopen', 'iota_latin', 'OU', 'Schwa.sc', 'Ldot', 'P.sc', 'Whook.sc', 'ae', 'Fsuperior', 's', 'schwa', 'Eopen.sc', 'jsuperior', 'fi', 'Hturned.sc', 'hturned', 'Ezh', 'T.sc', 'T', 'Pinferior', 'DZ', 'Uinferior', 'ohorn', 'bhook', 'msuperior', 'Zsuperior', 'Ereversed', 'ksuperior', 'ainferior', 'jcrossedtail', 'Zinferior', 'Vinferior', 'ldot', 'jinferior', 'r', 'Binferior', 'b', 'Hinferior', 'ezh', 'sinferior', 'vturned', 'C', 'N.sc', 'Ghook', 'S.sc', 'Jinferior', 'DZ.sc', 'Einferior', 'lbelt', 'W.sc', 'Khook', 'Ksuperior', 'eth', 'Eng.sc', 'f.alt_noconnect', 'hryvnia', 'Jcrossedtail', 'hinferior', 'mturned', 'Ezhreversed.sc', 'ssuperior', 'cinferior', 'idotlesshorn', 'Dafrican.sc', 'Nlongrightleg', 'Thorn', 'Y', 'eshreversedloop', 'tinferior', 'uinferior', 'Jsuperior', 'liraTurkish', 'rsuperior', 'kinferior', 'f.alt_connect', 'dcaron', 'a', 'oopen', 'Ginferior', 'esh', 'yturned', 'D.sc', 'AE', 'G', 'egraveinferior', 'Kinferior', 'ezhreversed', 'germandbls', 'Vsuperior', 'p', 'Yinferior', 'germandbls.sc', 'Dafrican', 'winferior', 'xinferior', 'Rinferior', 'ysuperior', 'Uhorn', 'iinferior', 'Ssuperior', 'binferior', 'Jcrossedtail.sc', 'idotless', 'Khook.sc', 'Ninferior'}, 'sc_cy': {'Hahook_cy.sc', 'Ia_cy.sc', 'Er_cy.sc', 'De_cy.sc', 'De_cy.loclBGR.sc', 'Dzeabkh_cy.sc', 'Aie_cy.sc', 'Ka_cy.sc', 'Dje_cy.sc', 'Schwa_cy.sc', 'Cheabkhasian_cy.sc', 'Be_cy.sc', 'Gehookstroke_cy.sc', 'Enghe_cy.sc', 'Enhook_cy.sc', 'Kahook_cy.sc', 'Che_cy.sc', 'Te_cy.sc', 'Zhe_cy.sc', 'Hardsign_cy.sc', 'A_cy.sc', 'Yi_cy.sc', 'Ef_cy.sc', 'Chedescender_cy.sc', 'Pemiddlehook_cy.sc', 'Haabkhasian_cy.sc', 'Shha_cy.sc', 'Edieresis_cy.sc', 'Dze_cy.sc', 'U_cy.sc', 'Ha_cy.sc', 'Ve_cy.sc', 'E_cy.sc', 'Ustrait_cy.sc', 'El_cy.sc'}, 'sc': {'five.sc', 'three.sc', 'seven.sc', 'C.sc', 'Lcaron.sc', 'Beta.sc', 'Z.sc', 'Gamma.sc', 'L.sc', 'AE.sc', 'slash.sc', 'Alpha.sc', 'Enghe_cy.sc', 'Enhook_cy.sc', 'Zhe_cy.sc', 'V.sc', 'question.sc', 'Oopen.sc', 'degree.sc', 'exclam.sc', 'braceleft.sc', 'Epsilon.sc', 'Rho.sc', 'Ohorn.sc', 'R.sc', 'Etatonos.sc', 'U.sc', 'parenleft.sc', 'Psi.sc', 'Thorn.sc', 'glottalstopsmall', 'Uhorn.sc', 'Omicron.sc', 'J.base.sc', 'zero.sc', 'Xi.sc', 'braceright.sc', 'questiondown.sc', 'G.sc', 'A.sc', 'Omicrontonos.sc', 'Bhook.sc', 'Tau.sc', 'Ezh.sc', 'backslash.sc', 'Be_cy.sc', 'Ldot.sc', 'Kahook_cy.sc', 'Te_cy.sc', 'Germandbls.sc', 'B.sc', 'Shha_cy.sc', 'Chi_latin.sc', 'Fstroke.sc', 'Ha_cy.sc', 'Ve_cy.sc', 'Zeta.sc', 'Y.sc', 'El_cy.sc', 'Hahook_cy.sc', 'Ia_cy.sc', 'eight.sc', 'Er_cy.sc', 'parenright.sc', 'De_cy.sc', 'F.sc', 'Ereversed.sc', 'Upsilon.sc', 'Schwa.sc', 'P.sc', 'Sigma.sc', 'Whook.sc', 'Sigmafinal.sc', 'Eopen.sc', 'Schwa_cy.sc', 'Cheabkhasian_cy.sc', 'Nu.sc', 'bracketleft.sc', 'KaiSymbol.sc', 'Gehookstroke_cy.sc', 'Che_cy.sc', 'Hturned.sc', 'A_cy.sc', 'T.sc', 'two.sc', 'Chi.sc', 'exclamdown.sc', 'Yi_cy.sc', 'Ef_cy.sc', 'Chedescender_cy.sc', 'four.sc', 'N.sc', 'Alphatonos.sc', 'Edieresis_cy.sc', 'S.sc', 'DZ.sc', 'W.sc', 'Dze_cy.sc', 'U_cy.sc', 'Eng.sc', 'Ezhreversed.sc', 'Dafrican.sc', 'six.sc', 'numbersign.sc', 'Upsilontonos.sc', 'De_cy.loclBGR.sc', 'Dzeabkh_cy.sc', 'section.sc', 'Aie_cy.sc', 'Ka_cy.sc', 'nine.sc', 'Dje_cy.sc', 'D.sc', 'ampersand.sc', 'Omegatonos.sc', 'Hardsign_cy.sc', 'Omega.sc', 'germandbls.sc', 'one.sc', 'Phi.sc', 'Pemiddlehook_cy.sc', 'Haabkhasian_cy.sc', 'bracketright.sc', 'Jcrossedtail.sc', 'Khook.sc', 'E_cy.sc', 'Ustrait_cy.sc'}, 'sc_lt': {'Ezhreversed.sc', 'Dafrican.sc', 'G.sc', 'A.sc', 'F.sc', 'Ereversed.sc', 'Bhook.sc', 'Schwa.sc', 'P.sc', 'C.sc', 'Lcaron.sc', 'Whook.sc', 'Z.sc', 'Eopen.sc', 'Ezh.sc', 'D.sc', 'L.sc', 'AE.sc', 'Ldot.sc', 'Hturned.sc', 'T.sc', 'Germandbls.sc', 'V.sc', 'germandbls.sc', 'Oopen.sc', 'B.sc', 'Ohorn.sc', 'R.sc', 'U.sc', 'Chi_latin.sc', 'N.sc', 'Thorn.sc', 'S.sc', 'Fstroke.sc', 'Uhorn.sc', 'DZ.sc', 'J.base.sc', 'Jcrossedtail.sc', 'Khook.sc', 'W.sc', 'Eng.sc', 'Y.sc'}, 'gr': {'Beta', 'upsilon', 'alpha', 'sigma', 'kaiSymbol', 'Gamma', 'Upsilontonos.sc', 'Omicrontonos.sc', 'Omegatonos', 'iota', 'Upsilon.sc', 'xi', 'Psi', 'epsilon', 'Upsilon', 'Alpha', 'Tau.sc', 'psi', 'Sigma.sc', 'Xi', 'lambda', 'Beta.sc', 'pi', 'nu', 'Sigmafinal.sc', 'Gamma.sc', 'Rho', 'sigmafinal', 'zeta', 'Zeta', 'chi', 'rho', 'Nu.sc', 'Epsilon', 'Nu', 'iotadieresis', 'Alpha.sc', 'KaiSymbol.sc', 'numeral_greek', 'Omicrontonos', 'kappa', 'Omegatonos.sc', 'beta', 'KaiSymbol', 'Sigma', 'Omega.sc', 'Omicron', 'Alphatonos', 'tau', 'Chi.sc', 'Tau', 'Phi.sc', 'omega', 'eta', 'Epsilon.sc', 'omicron', 'Rho.sc', 'delta', 'Etatonos.sc', 'Omega', 'theta', 'Psi.sc', 'Alphatonos.sc', 'phi', 'Omicron.sc', 'lowernumeral_greek', 'Phi', 'Chi', 'Etatonos', 'Zeta.sc', 'Upsilontonos', 'Xi.sc', 'gamma'}, 'inferior': {'cinferior', 'twoinferior', 'fourinferior', 'tinferior', 'uinferior', 'kinferior', 'qinferior', 'vinferior', 'zinferior', 'parenleftinferior', 'egraveinferior', 'fiveinferior', 'oneinferior', 'ginferior', 'zeroinferior', 'commainferior', 'minferior', 'finferior', 'seveninferior', 'nineinferior', 'winferior', 'xinferior', 'threeinferior', 'ainferior', 'jinferior', 'iinferior', 'sinferior', 'equalinferior', 'binferior', 'yinferior', 'sixinferior', 'parenrightinferior', 'dinferior', 'rinferior', 'hinferior', 'eightinferior'}, 'asc': {'braceright', 'creversed', 'guillemotright', 'bar', 'dotaccent', 'colon', 'partialdiff', 'slash.sc', 'Esh', 'question.sc', 'comma', 'radical', 'currency', 'degree.sc', 'exclam.sc', 'braceleft.sc', 'sterling', 'parenleft.sc', 'glottalstopsmall', 'quotedblleft', 'copyright', 'braceright.sc', 'questiondown.sc', 'clickretroflex', 'rupeeIndian', 'Saltillo', 'backslash.sc', 'circumflex', 'asterisk', 'bullet', 'guillemotleft', 'Napostrophe.sc', 'Glottalstop', 'asciitilde', 'underscore', 'slash', 'quotedblright', 'apple', 'backslash', 'degree', 'emdash', 'yen', 'florin', 'parenright.sc', 'Euro', 'ampersand', 'newsheqel', 'trademark', 'parenleft', 'bracketleft.sc', 'space', 'dollar', 'exclamdown.sc', 'section', 'percent', 'paragraph', 'exclamdown', 'bracketright', 'questiondown', 'anoteleia', 'numbersign.sc', 'section.sc', 'cent', 'ampersand.sc', 'at', 'parenright', 'bracketleft', 'numbersign', 'periodcentered', 'asciicircum', 'bracketright.sc', 'glottalstopreversed', 'ordfeminine', 'braceleft', 'tilde', 'ruble', 'quotedblrightreversed', 'ordmasculine', 'horizontalbar'}, 'uc': {'guillemotleft.uc', 'guillemotright.uc', 'periodcentered.uc', 'emdash.uc', 'questiondown.uc', 'bullet.uc', 'exclamdown.uc'}, 'nok': {'dotaccent', 'infinity', 'integral', 'manat', 'numbersign.sc', 'paragraph', 'macron', 'ogonek', 'multiply', 'lozenge', 'hungarumlautcmb', 'dagger', 'minus', 'numbersign', 'approxequal', 'hungarumlaut'}, 'dnom': {'one.dnom', 'onehalf', 'three.dnom', 'oneseventh', 'four.dnom', 'onetenth', 'seven.dnom', 'two.dnom', 'five.dnom', 'fivesixths', 'zero.dnom', 'nine.dnom', 'eight.dnom', 'six.dnom', 'onethird'}, 'fig': {'one', 'six', 'fraction', 'four', 'eight', 'zero', 'seven', 'five', 'two', 'three', 'nine'}, 'numr': {'zero.numr', 'five.numr', 'three.numr', 'eight.numr', 'four.numr', 'nine.numr', 'two.numr', 'seven.numr', 'one.numr', 'six.numr', 'onethird'}, 'onum': {'eight.onum', 'one.onum', 'five.onum', 'three.onum', 'four.onum', 'seven.onum', 'six.onum', 'two.onum', 'nine.onum', 'zero.onum'}}
}

